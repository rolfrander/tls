org.pvv.rolfn.formatting.FormatUtils.printHex(new byte[] { 10, 20, 30, 40, 50, 60, 61, 62, 63, 64, 64, 65, 66, 67, 68, 69, 125, 126, 127, -1, -2, -3, -4} );
 (No explicit return value) (No explicit return value)

new byte[] { 10, 20, 30, 40, 50, 60, 61, 62, 63, 64, 64, 65, 66, 67, 68, 69, 125, 126, 127}

"test"

 512/8(int) 64(int) 48
 
 String.format("%04x", 42)
 
 int l=1;
 byte b = (byte)0xb3;
 l=(l<<8) | ((int)b & 0xff);
 l
(int) 435

int c=3;
while(c-->0) { System.out.println(c); }

System.out.println(0xffff0000);

0xffff0000
(int) -65536

java.math.BigInteger.valueOf(2).nextProbablePrime()

java.math.BigInteger n=java.math.BigInteger.ONE;
for(int i=0; i<1000; i++) {
	n = n.nextProbablePrime();
	System.out.print(n);
	if((i % 20) == 0) {
		System.out.println();
	} else {
		System.out.print(' ');
	}
}
 (No explicit return value)
 
new java.net.URL("file:\\C:\\Users\\RolfRander\\Documents\\workspace\\tls\\target\\classes\\org\\pvv\\rolfn\\asn1\\oid.asn1").openStream()

long l = Long.MAX_VALUE;
return l+1;

int i=255;
String.format("%x", (byte)i);

return (int)(System.currentTimeMillis()/1000);
(long) 1396899118
(long) 1396899095937

return Integer.MAX_VALUE;
(int) 2147483647
(int) 1396899151

Integer.valueOf(3).compareTo(Integer.valueOf(4)) < 0

String dhcp = "0:1e:2a:1:7:9c:0:0:0:0:0:0:0:0:0:0:0:0:d5:a7:73:5c";
java.util.StringTokenizer tok = new java.util.StringTokenizer(dhcp,":");
ArrayList<Integer> data = new ArrayList<Integer>();
while(tok.hasMoreElements()) {
	data.add(Integer.parseInt(tok.nextToken(), 16));
}
int ip4mask = data.get(0);
int ip6rdprefix = data.get(1);
int delegated = 32-ip4mask+ip6rdprefix;
String ip4gw = String.format("%d.%d.%d.%d", data.get(18), data.get(19), data.get(20), data.get(21));
System.out.println(data.get(0)+" "+data.get(1)+" 2a01:079c:0:0:0:0:0:0 "+data.get(18)+" "+data.get(19)+" "+data.get(20)+" "+data.get(21));
System.out.println("2a01:079c::/"+ip6rdprefix+" -> "+ip4gw+" mask "+ip4mask+" delegated /"+delegated);
 (No explicit return value)